<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guides on Getting Started Guides</title>
    <link>/guides/</link>
    <description>Recent content in Guides on Getting Started Guides</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Nov 2020 00:00:00 -0500</lastBuildDate><atom:link href="/guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Concepts of Web Development</title>
      <link>/guides/concepts-of-web-dev/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/concepts-of-web-dev/</guid>
      <description>A website is rendered in a web browser through the HTTP Protocol. There&amp;rsquo;s a lot more one should learn about Internet Protocols, but it&amp;rsquo;s not required to get an operational understanding of working with websites.
Web Design Principles
The page that is rendered by the web browser is formatted in Hypertext Markup Language or HTML for short. HTML is a set of nested tags that describe how the page should be structured.</description>
    </item>
    
    <item>
      <title>Web Development Intro</title>
      <link>/guides/concepts-of-web-network/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/concepts-of-web-network/</guid>
      <description>A website is rendered in a web browser through the HTTP Protocol. There&amp;rsquo;s a lot more one should learn about Internet Protocols, but it&amp;rsquo;s not required to get an operational understanding of working with websites. The page that is rendered by the webbrowser is formatted in Hypertext Markup Language or HTML for short. HTML is a set of nested tags that describe how the page should be structured. It&amp;rsquo;s like an outline with hierarchical layers or if you recall from data structures class, a tree.</description>
    </item>
    
    <item>
      <title>Data Flow Diagrams</title>
      <link>/guides/dataflowdiagrams/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/dataflowdiagrams/</guid>
      <description>What are Data Flow Diagrams (DFD)? #  This is a diagram that maps out the flow of information for any system. There are defined symbols like rectangles, circles, arrows, and so on to distinguish different parts of the system.
There are different kinds of data flow diagrams as well, most are separated into either logical DFD or Physical DFD. Logical data flow diagrams focuses on the system process(es). Physical data flow diagrams show how the data flow is implemented in the system.</description>
    </item>
    
    <item>
      <title>Starting a Website</title>
      <link>/guides/buildawebsite/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/buildawebsite/</guid>
      <description>Introduction #  This page focuses on the process, concepts, and tools for building any type of web site or web application. A website has a lot of overlapping functionality and technology as a web application, except it doesn&amp;rsquo;t focus on high volume of dynamism and user interactivity, which would require a database. This article mentions the two interchangeable. However, if one were precise, this article focuses on websites.
Process from Idea to Product #  Building a website follows many of the principles of building a software application, which includes figuring out what to build ,managing the building, and validating the quality of the final product.</description>
    </item>
    
    <item>
      <title>Including a README with your project</title>
      <link>/guides/writingreadme/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/writingreadme/</guid>
      <description>What is a README? #  This is a file that is named README, that usually resides in the root of your project directory. This name comes from the command Read me. as in the situation of handing a project off to another developer and writing a memo to them that should be read first before the source code.
In a way, it serves as an executive summary of your project.</description>
    </item>
    
    <item>
      <title>Build Tools</title>
      <link>/guides/buildtools/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/buildtools/</guid>
      <description>What is a build tool? #  A build tool is a programming utility that automates a software build task, such as compiling source code, cleaning temporary files, and so on. A popular open source build tool is Make, another popular build tool is Maven
GNU Make #  Make is a build tool released by GNU. Make was original designed to work with C source code. Make configurations are specified by a text file named Makefile.</description>
    </item>
    
    <item>
      <title>SSH</title>
      <link>/guides/ssh/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/ssh/</guid>
      <description>Table of Contents   Getting started with SSH   What is SSH?   What is an SSH Client?  When would you use SSH?      SSH by terminal   How do I ssh in terminal?  SSH Programs for Mac   1. Terminal App  2. iTerm app    SSH Programs for Windows   1. Putty (a simple GUI app)  2.</description>
    </item>
    
    <item>
      <title>Sharing Coding Projects</title>
      <link>/guides/codeprojects/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/codeprojects/</guid>
      <description>Project based thinking #  Programmers are typically learning to write source code to build programs not just scripts. A programming project requires far more than just fluency with a particular programming language syntax to cohesively put together.
Creating a program requires certain executive functioning skills to coordinate and manage. This guide provides some advice and items to consider include when sharing your codebase. It is not meant to be followed religiously, but instead to provide a framework to guide your approach.</description>
    </item>
    
    <item>
      <title>Github Pages</title>
      <link>/guides/githubpages/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 -0400</pubDate>
      
      <guid>/guides/githubpages/</guid>
      <description>What is Github Pages? #  This is a feature provided by GitHub where you can host websites directly from your GitHub repository. These websites are typically static files, meaning there is no database no backend. For example, this website is hosted on GitHub Pages, it was built with a static site generator.
To find out more, go to https://pages.github.com
How to create your home page (easy way) #  When you use GitHub pages, you can access your website at the url http://username.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>/guides/git/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/git/</guid>
      <description>Git #  Version control systems are used in managing revision control of project artifacts, and maintaining a history of changes to each artifact. Artifacts can include documents, source code, and much more.
Motivations for Source Version Control
 Keeping track of code Storing versions of code changes Restoring previous versions Reviewing work history Collaborating in a group Backup There are two main approaches to version control management systems. That is, they can either be centralized, or decentralized repositories.</description>
    </item>
    
    <item>
      <title>Java Collections Framework</title>
      <link>/guides/jcf/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/jcf/</guid>
      <description>Introduction #  This description is taken straight from Oracle&amp;rsquo;s Java Documentation page.
 The Java platform includes a collections framework. A collection is an object that represents a group of objects (such as the classic Vector class). A collections framework is a unified architecture for representing and manipulating collections, enabling collections to be manipulated independently of implementation details.
 Object-Oriented Fundamentals #  It would be helpful to remember that because is using the Java programming language, which is an object oriented programming language, these collections use the data abstraction concepts such as inheritance to make it possible to be used.</description>
    </item>
    
    <item>
      <title>Java 8</title>
      <link>/guides/java/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/java/</guid>
      <description>1 Intro #  The CIS department at Brooklyn College officially supports Java 8. This means that Java courses are taught adhering to this version. Using later versions such as Java 11 is perfectly find for most instances, there may be some minor differences with certain classes and methods or certain version specific-quirks.
The best thing to do is to keep documentation links handy.
Helpful links #  These are useful links to reference.</description>
    </item>
    
    <item>
      <title>File naming conventions</title>
      <link>/guides/filenames/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 -0500</pubDate>
      
      <guid>/guides/filenames/</guid>
      <description>Introduction #  In the day to day work of programming, one often finds that a large fraction of time is spent looking for certain files. One of the wise adages with managing an assortment of files is to provide an organization scheme to make it easier to find what you need again. It not only helps you as the maintainer, but also helps your reader(s)** and collaborator(s) as well. This is a good habit to devleop before you find yourself managing hundreds of files.</description>
    </item>
    
  </channel>
</rss>
